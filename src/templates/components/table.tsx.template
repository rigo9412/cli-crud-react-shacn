"use client";
import { Suspense } from "react";
import { useColumns } from "./columns";

import { Card, CardContent } from "@/components/ui/card";
import { TableFilter, UseGet{{modelNamePlural}} } from "../api/use-get-{{modelNameKebabCasePlural}}";
import { DataTable } from "@/components/ui/data-table";
import { useTableFilters } from "@/hooks/use-table-filters";
import { useTranslations } from "next-intl";
import { TableSkeletonSimple } from "@/components/ui/table-skeleton";

export const TableContent = ( ) => {
  const columns = useColumns();
  const [{ search, page, limit }, setFilters] = useTableFilters();

  const { data: {{modelNameCamelCasePlural}}, isLoading } = UseGet{{modelNamePlural}}({
    search,
    page,
    limit,
  } as TableFilter);

  if (isLoading) {
    return <div>loading...</div>;
  }

  return (
    <Card
      className="shadow-none overflow-y-auto overflow-x-auto"
      data-testid="{{modelNameKebabCasePlural}}-table-card"
    >
      <CardContent className="p-5" data-testid="{{modelNameKebabCasePlural}}-table-content">
        <DataTable
          data={ {{modelNameCamelCasePlural}}?.data ?? []}
          columns={columns}
          pageSize={parseInt(limit)}
          search={search}
          manualPagination={true}
          currentPage={parseInt(page)}
          onSearch={(search) => setFilters({ search, page: "0" })}
          total={ {{modelNameCamelCasePlural}}?.total ?? 0}
          onPageChange={(pageNumber) => {
            setFilters({ page: pageNumber.toString() });
          }}
        />
      </CardContent>
    </Card>
  );
};

export const Table{{modelNamePlural}} = ( ) => {
 

  return (
    <Suspense
      fallback={
        <div data-testid="loading-table-{{modelNameKebabCasePlural}}">Loading...</div>
      }
    >
      <TableContent />
    </Suspense>
  );
};