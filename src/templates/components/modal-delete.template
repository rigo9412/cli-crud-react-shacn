"use client";
import { Suspense } from "react";
import { DialogForm } from "@/components/dialog-form";
import { KEY_MODAL_{{modelNameUpperCase}}_DELETE } from "../constants";
import { Button } from "@/components/ui/button";
import useModal from "@/hooks/use-modal";
import { UseGet{{modelName}} } from "../api/use-get-{{modelNameKebabCase}}-by-id";
import { UseDelete{{modelName}} } from "../api/use-delete-{{modelNameKebabCase}}";
 

const ModalContent = ({ hasPermission }: { hasPermission: boolean }) => {
  const { id, close } = useModal({ key: KEY_MODAL_{{modelNameUpperCase}}_DELETE });
  const { data: {{modelNameCamelCase}}, isLoading } = UseGet{{modelName}}({ id });
  const { mutate, isPending: isLoadingDelete } = UseDelete{{modelName}}();
  

  if (id === null) {
    return null;
  }

  const onSubmit = async () => {
    mutate(
      { param: { id: id } },
      {
        onSuccess: () => {
          close();
        },
      }
    );
  };

  return (
    <DialogForm
      size="lg"
      title="Delete {{modelName}}"
      open={id != null}
      onOpenChange={close}
      data-testid="modal-delete-{{modelNameKebabCase}}"
    >
      {isLoading && (
        <div data-testid="loading-{{modelNameKebabCase}}-data">Loading...</div>
      )}
  
    
        <div data-testid="delete-confirmation-container">
          <h1
            className="text-xl font-bold"
            data-testid="delete-confirmation-title"
          >
            Confirmation Delete {{modelName}}
          </h1>
          <p className="text-gray-600" data-testid="delete-warning-text">
            Are you sure you want to delete this {{modelNameKebabCase}}? This action cannot be undone.
          </p>
          <div className="flex w-full justify-end gap-2">
            <Button
              onClick={close}
              variant={"outline"}
              data-testid="btn-cancel-delete"
            >
              Cancel
            </Button>
            <Button
              isLoading={isLoadingDelete}
              onClick={onSubmit}
              variant={"destructive"}
              data-testid="btn-confirm-delete"
            >
              Delete
            </Button>
          </div>
        </div>
      
    </DialogForm>
  );
};

export const ModalDelete{{modelName}} = () => {
  return (
    <Suspense
      fallback={
        <div data-testid="loading-delete-{{modelNameKebabCase}}">Loading...</div>
      }
    >
      <ModalContent  />
    </Suspense>
  );
};