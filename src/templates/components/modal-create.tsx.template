"use client";
import { Suspense } from "react";
import { DialogForm } from "@/components/dialog-form";
import { KEY_FORM_{{modelNameUpperCase}}_CREATE } from "../constants";
import useModal from "@/hooks/use-modal";
import { Form{{modelName}} } from "./form";
import { {{modelName}} } from "../types";
import { UseCreate{{modelName}} } from "../api/use-create-{{modelNameKebabCase}}";
 

export const ModalContent = () => {
  const { id, close } = useModal({ key: KEY_FORM_{{modelNameUpperCase}}_CREATE });
  const { mutate, isPending: isLoadingUpdate, isError, error } = UseCreate{{modelName}}();
  
  
  if (id === null) {
    return null;
  }
  
  const onSubmit = async (value: {{modelName}}) => {
    mutate(
      { json: value },
      {
        onSuccess: () => {
          close();
        },
      }
    );
  };

  return (
    <DialogForm
      title={'Create {{modelName}}'}
      open={id != null}
      onOpenChange={close}
      size="lg"
      data-testid="modal-create-{{modelNameKebabCase}}"
    >
      {isError && (
        <div data-testid="error-create-{{modelNameKebabCase}}">
          {error?.message}
        </div>
      )}
     
  
      <Form{{modelName}}
        submit={onSubmit}
        isLoading={isLoadingUpdate}
        onClose={close}
        init{{modelName}}={ {{#if defaultValues}}{{defaultValues}}{{else}}{
          {{#each fields}}
          {{name}}: {{#if defaultValue}}{{defaultValue}}{{else}}""{{/if}},
          {{/each}}
        }{{/if}} }
      /> 
    </DialogForm>
  );
};

export const ModalCreate{{modelName}} = () => {
 
  return (
    <Suspense 
      fallback={
        <div data-testid="loading-create-{{modelNameKebabCase}}">
          Loading...
        </div>
      }
    >
      <ModalContent   />
    </Suspense>
  );
};